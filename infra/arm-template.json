{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "vcarpool",
      "metadata": {
        "description": "The name prefix used for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "The environment (dev, test, prod)"
      }
    },
    "keyVaultEnableRbacAuthorization": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable RBAC authorization for Key Vault"
      }
    }
  },
  "variables": {
    "resourceToken": "[concat(parameters('resourcePrefix'), '-', parameters('environment'))]",
    "storageAccountName": "[replace(concat(variables('resourceToken'), 'stor'), '-', '')]",
    "functionAppName": "[concat(variables('resourceToken'), '-api')]",
    "keyVaultName": "[concat(variables('resourceToken'), '-vault')]",
    "staticWebAppName": "[concat(variables('resourceToken'), '-frontend')]",
    "tags": {
      "application": "Carpool Management",
      "environment": "[parameters('environment')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "defaultToOAuthAuthentication": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "reserved": true,
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.12",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "COSMOS_ENDPOINT",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), environment().suffixes.keyvaultDns, '/secrets/COSMOS-ENDPOINT/)')]"
            },
            {
              "name": "COSMOS_KEY",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), environment().suffixes.keyvaultDns, '/secrets/COSMOS-KEY/)')]"
            },
            {
              "name": "JWT_SECRET_KEY",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), environment().suffixes.keyvaultDns, '/secrets/JWT-SECRET-KEY/)')]"
            }
          ]
        },
        "identity": {
          "type": "SystemAssigned"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": "[parameters('keyVaultEnableRbacAuthorization')]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-09-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "provider": "Custom",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('functionAppName')), 'Key Vault Secrets User')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "scope": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]"
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "functionAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2022-09-01').defaultHostName]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "staticWebAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName')), '2022-09-01').defaultHostName]"
    }
  }
}
